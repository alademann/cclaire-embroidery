// Webkit-style focus
@mixin tab-focus() {
    // Default
    outline: thin dotted #333;
    // Webkit
    outline: 5px auto -webkit-focus-ring-color;
    outline-offset: -2px;
}

@mixin clearfix {
    &:before,
    &:after {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}


// Button pseudo states
// -------------------------
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons
@mixin btn-pseudo-states($color, $background, $border) {
    color: $color;
    background-color: $background;
        border-color: $border;

    &:hover,
    &:focus,
    &:active,
    &.active {
        background-color: darken($background, 5%);
            border-color: darken($border, 10%);
    }

    &.disabled,
    &[disabled],
    fieldset[disabled] & {
        &,
        &:hover,
        &:focus,
        &:active,
        &.active {
            background-color: $background;
                border-color: $border
        }
    }
}

@mixin buttons($liquid: false) {
    display: inline-block;
    zoom: 1;
    *display: inline;
    padding: $padding-base-vertical $padding-base-horizontal;
    margin-bottom: 0; // For input.btn
    font-size: $font-size-base;
    font-weight: 500;
    line-height: $line-height-base;
    text-align: center;
    vertical-align: middle;
    cursor: pointer;
    border: 1px solid transparent;
    border-radius: $border-radius-base;
    white-space: nowrap;
    @include transition("border-color background-color" .3s ease);

    @if $liquid {
        background-color: #{"$color_btn_bg"};
        color: #{"$color_btn_text"};
    } @else {
        background-color: $color_btn_bg;
        color: $color_btn_text;
    }

    &:focus {
        @include tab-focus();
        outline: 0;
        @include box-shadow(#{$focus-glow});
    }

    &:hover,
    &:focus,
    &:active {
        @if $liquid {
            color: #{"$color_btn_text"};
            background-color: #{"darken($color_btn_bg, $cclaireBtnHoverDarken)"};
            border-color: #{"darken($color_btn_bg, $cclaireBtnHoverDarken * 2)"};
        } @else {
            color: $color_btn_text;
            background-color: darken($color_btn_bg, $cclaireBtnHoverDarken);
            border-color: darken($color_btn_bg, $cclaireBtnHoverDarken * 2);
        }
    }

    &.disabled,
    &[disabled],
    fieldset[disabled] & {
        cursor: default;
        pointer-events: none; // Future-proof disabling of clicks
        @include opacity(.65);
        @include box-shadow(none);

        &,
        &:hover,
        &:focus,
        &:active {
            @if $liquid {
                background-color: #{"$color_btn_bg"};
                border-color: #{"$color_btn_bg"};
            } @else {
                background-color: $color_btn_bg;
                border-color: $color_btn_bg;
            }
        }
    }
}


// Modeled after twbs alerts
@mixin alert-variant($background, $border, $text-color) {
    background-color: $background;
    border-color: $border;
    color: $text-color;
    hr {
        border-top-color: darken($border, 5%);
    }
    .alert-link {
        color: darken($text-color, 10%);
    }
}


%alert {
    padding: 10px 15px !important;
    margin-bottom: $line-height-computed;
    color: $alert-text;
    background-color: $alert-bg;
    border: 1px solid $alert-border;
    border-radius: $alert-border-radius;

    // Headings for larger alerts
    h4 {
        margin-top: 0;
        // Specified for the h4 to prevent conflicts of changing $headingsColor
        color: inherit;
    }
    // Match the hr to the border of the alert
    hr {
        border-top-color: darken($alert-border, 5%);
    }
    // Provide class for links that match alerts
    .alert-link {
        font-weight: 500;
        color: darken($alert-text, 10%);
    }

    // Adjust close link position
    .close {
        position: relative;
        top: -2px;
        right: -21px;
        color: inherit;
    }
}

// Alternate styles
// -------------------------

%alert-success {
    @include alert-variant($alert-success-bg, $alert-success-border, $alert-success-text);
}
%alert-danger {
    @include alert-variant($alert-danger-bg, $alert-danger-border, $alert-danger-text);
}
%alert-info {
    @include alert-variant($alert-info-bg, $alert-info-border, $alert-info-text);
}

// Block alerts
// -------------------------

%alert-block {
    padding-top: 15px;
    padding-bottom: 15px;

    > p,
    > ul {
        margin-bottom: 0;
    }
    p + p {
        margin-top: 5px;
    }
}